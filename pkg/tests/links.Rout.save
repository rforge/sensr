
R version 2.14.1 (2011-12-22)
Copyright (C) 2011 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-pc-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(sensR)
Loading required package: ordinal
Loading required package: MASS
Loading required package: ucminf
Loading required package: Matrix
Loading required package: lattice

Attaching package: 'Matrix'

The following object(s) are masked from 'package:base':

    det

Loading required package: numDeriv
> 
> #################################
> ## Tests of triangle family object:
> delta.lim <- c(-Inf, -1, 0, 1e-3, 1e-2, .1, 1:20, 30, Inf)
> print(cbind(delta.lim,
+             tri.linkinv=triangle()$linkinv(delta.lim),
+             muEta=triangle()$mu.eta(delta.lim)), digits=7)
      delta.lim tri.linkinv        muEta
 [1,]      -Inf   0.3333333 0.000000e+00
 [2,]    -1.000   0.3333333 0.000000e+00
 [3,]     0.000   0.3333333 0.000000e+00
 [4,]     0.001   0.3333334 1.837763e-04
 [5,]     0.010   0.3333425 1.837732e-03
 [6,]     0.100   0.3342514 1.834703e-02
 [7,]     1.000   0.4180467 1.559890e-01
 [8,]     2.000   0.6048069 1.966858e-01
 [9,]     3.000   0.7814276 1.486510e-01
[10,]     4.000   0.8976604 8.546117e-02
[11,]     5.000   0.9587777 4.054222e-02
[12,]     6.000   0.9856942 1.621703e-02
[13,]     7.000   0.9957333 5.489022e-03
[14,]     8.000   0.9989092 1.572632e-03
[15,]     9.000   0.9997614 3.813965e-04
[16,]    10.000   0.9999554 7.829675e-05
[17,]    11.000   0.9999929 1.360594e-05
[18,]    12.000   0.9999990 2.001385e-06
[19,]    13.000   0.9999999 2.492014e-07
[20,]    14.000   1.0000000 2.626563e-08
[21,]    15.000   1.0000000 2.343381e-09
[22,]    16.000   1.0000000 1.769765e-10
[23,]    17.000   1.0000000 1.131373e-11
[24,]    18.000   1.0000000 6.122283e-13
[25,]    19.000   1.0000000 2.804392e-14
[26,]    20.000   1.0000000 0.000000e+00
[27,]    30.000   1.0000000 0.000000e+00
[28,]       Inf   1.0000000 0.000000e+00
> 
> pc <- c(-Inf, -1, 0:3/10, 1/3, 1/3 + 1e-9, 1/3 + 1e-7,
+         4:9/10, 1-1e-7, 1-1e-9, 1, 2, Inf)
> print(cbind(pc, triangle()$linkfun(pc)), digits=7)
              pc             
 [1,]       -Inf 0.000000e+00
 [2,] -1.0000000 0.000000e+00
 [3,]  0.0000000 0.000000e+00
 [4,]  0.1000000 0.000000e+00
 [5,]  0.2000000 0.000000e+00
 [6,]  0.3000000 0.000000e+00
 [7,]  0.3333333 0.000000e+00
 [8,]  0.3333333 1.220703e-04
 [9,]  0.3333334 1.019895e-03
[10,]  0.4000000 8.791146e-01
[11,]  0.5000000 1.466263e+00
[12,]  0.6000000 1.975602e+00
[13,]  0.7000000 2.503723e+00
[14,]  0.8000000 3.128591e+00
[15,]  0.9000000 4.027626e+00
[16,]  0.9999999 1.304606e+01
[17,]  1.0000000          Inf
[18,]  1.0000000          Inf
[19,]  2.0000000          Inf
[20,]        Inf          Inf
> 
> 1 - (pcc <- triangle()$linkinv(14))
[1] 1.072692e-08
> triangle()$linkfun(pcc)
[1] 14
> 1 - (pcc <- triangle()$linkinv(14 + .1))
[1] 8.383021e-09
> triangle()$linkfun(pcc)
[1] Inf
> 1 - (pcc <- triangle()$linkinv(15))
[1] 8.011369e-10
> triangle()$linkfun(pcc)
[1] Inf
> 
> #################################
> ## Tests of 3-AFC family object:
> 
> ## Evaluating linkinv, mu.eta and linkfun for a range of values: 
> delta.lim <- c(-Inf, -1, 0, 1e-3, 1e-2, .1, 1:20, 30, Inf)
> pc <- c(-Inf, -1, 0:3/10, 1/3, 1/3 + 1e-4, 1/3 + 1e-3,
+         4:9/10, 1-1e-7, 1-1e-8, 1, 2, Inf)
> 
> print(cbind(delta.lim,
+             linkinv= threeAFC()$linkinv(delta.lim),
+             muEta= threeAFC()$mu.eta(delta.lim)
+             ), digits=7)
      delta.lim   linkinv        muEta
 [1,]      -Inf 0.3333333 0.000000e+00
 [2,]    -1.000 0.3333333 0.000000e+00
 [3,]     0.000 0.3333333 0.000000e+00
 [4,]     0.001 0.3336155 2.821866e-01
 [5,]     0.010 0.3361589 2.830066e-01
 [6,]     0.100 0.3619781 2.905538e-01
 [7,]     1.000 0.6337021 2.893191e-01
 [8,]     2.000 0.8657672 1.645677e-01
 [9,]     3.000 0.9687955 5.290402e-02
[10,]     4.000 0.9954965 9.804054e-03
[11,]     5.000 0.9995992 1.066691e-03
[12,]     6.000 0.9999780 6.912849e-05
[13,]     7.000 0.9999993 2.693954e-06
[14,]     8.000 1.0000000 6.345650e-08
[15,]     9.000 1.0000000 0.000000e+00
[16,]    10.000 1.0000000 0.000000e+00
[17,]    11.000 1.0000000 0.000000e+00
[18,]    12.000 1.0000000 0.000000e+00
[19,]    13.000 1.0000000 0.000000e+00
[20,]    14.000 1.0000000 0.000000e+00
[21,]    15.000 1.0000000 0.000000e+00
[22,]    16.000 1.0000000 0.000000e+00
[23,]    17.000 1.0000000 0.000000e+00
[24,]    18.000 1.0000000 0.000000e+00
[25,]    19.000 1.0000000 0.000000e+00
[26,]    20.000 1.0000000 0.000000e+00
[27,]    30.000 1.0000000 0.000000e+00
[28,]       Inf 1.0000000 0.000000e+00
> print(cbind(pc, threeAFC()$linkfun(pc)), digits=7)
              pc            
 [1,]       -Inf 0.000000000
 [2,] -1.0000000 0.000000000
 [3,]  0.0000000 0.000000000
 [4,]  0.1000000 0.000000000
 [5,]  0.2000000 0.000000000
 [6,]  0.3000000 0.000000000
 [7,]  0.3333333 0.000000000
 [8,]  0.3334333 0.000354413
 [9,]  0.3343333 0.003537184
[10,]  0.4000000 0.228853731
[11,]  0.5000000 0.556523358
[12,]  0.6000000 0.885182390
[13,]  0.7000000 1.237953392
[14,]  0.8000000 1.652411201
[15,]  0.9000000 2.230199922
[16,]  0.9999999 7.532917134
[17,]  1.0000000         Inf
[18,]  1.0000000         Inf
[19,]  2.0000000         Inf
[20,]        Inf         Inf
> 
> ## Going smooth toward zero:
> threeAFC()$mu.eta(8 - 10^(0:-7))
[1] 2.693954e-06 1.038769e-07 6.604403e-08 6.371077e-08 6.348188e-08
[6] 6.345904e-08 6.345675e-08 6.345653e-08
> diff(threeAFC()$mu.eta(8 - 10^(0:-7)))
[1] -2.590077e-06 -3.783292e-08 -2.333264e-09 -2.288855e-10 -2.284466e-11
[6] -2.284037e-12 -2.283981e-13
> 
> ## Upper limit for linkinv:
> 1 - threeAFC()$linkinv(9-.1) # 3.102338e-10
[1] 3.102338e-10
> 1 - threeAFC()$linkinv(9) # 0
[1] 0
> 1 - threeAFC()$linkinv(9+.1) # 0
[1] 0
> ## Lower limit for linkinv:
> threeAFC()$linkinv(1e-9) - 1/3 # 1.791433e-10
[1] 1.791433e-10
> threeAFC()$linkinv(1e-10) - 1/3 # 0
[1] 0
> 
> ## The upper limit for linkfun:
> threeAFC()$linkfun(1 - 1e-7) ## > Inf ~ 7.53
[1] 7.532917
> threeAFC()$linkfun(1 - 1.1e-8) ## < Inf ~ 8.0819
[1] 8.0819
> threeAFC()$linkfun(1 - 1e-8) ## Inf
[1] Inf
> ## Lower limit for linkfun:
> threeAFC()$linkfun(1/3 + 1e-5) # 6.103516e-05
[1] 6.103516e-05
> threeAFC()$linkfun(1/3 + 1e-6) # 0
[1] 0
> 
> #################################
> ## Tests of duo-trio family object:
> 
> ## Evaluating linkinv, mu.eta and linkfun for a range of values: 
> delta.lim <- c(-Inf, -1, 0, 1e-3, 1e-2, .1, 1:20, 30, Inf)
> pc <- c(-Inf, -1, 0:5/10, 0.5 + 1e-9, 0.5 + 1e-7,
+         6:9/10, 1-1e-9, 1-1e-10, 1, 2, Inf)
> print(cbind(delta.lim,
+             DT.linkinv=duotrio()$linkinv(delta.lim),
+             DT.mu.eta=duotrio()$mu.eta(delta.lim)), digits=7)
      delta.lim DT.linkinv    DT.mu.eta
 [1,]      -Inf  0.5000000 0.000000e+00
 [2,]    -1.000  0.5000000 0.000000e+00
 [3,]     0.000  0.5000000 0.000000e+00
 [4,]     0.001  0.5000001 1.837763e-04
 [5,]     0.010  0.5000092 1.837722e-03
 [6,]     0.100  0.5009179 1.833684e-02
 [7,]     1.000  0.5824754 1.476179e-01
 [8,]     2.000  0.7468202 1.591337e-01
 [9,]     3.000  0.8764567 9.749697e-02
[10,]     4.000  0.9466656 4.736789e-02
[11,]     5.000  0.9791915 2.079323e-02
[12,]     6.000  0.9928362 8.142832e-03
[13,]     7.000  0.9978663 2.745855e-03
[14,]     8.000  0.9994546 7.863479e-04
[15,]     9.000  0.9998807 1.906987e-04
[16,]    10.000  0.9999777 3.914838e-05
[17,]    11.000  0.9999965 6.802968e-06
[18,]    12.000  0.9999995 1.000693e-06
[19,]    13.000  0.9999999 1.246007e-07
[20,]    14.000  1.0000000 1.313282e-08
[21,]    15.000  1.0000000 1.171690e-09
[22,]    16.000  1.0000000 8.848823e-11
[23,]    17.000  1.0000000 5.656863e-12
[24,]    18.000  1.0000000 3.061142e-13
[25,]    19.000  1.0000000 1.402196e-14
[26,]    20.000  1.0000000 5.436905e-16
[27,]    30.000  1.0000000 4.362629e-34
[28,]       Inf  1.0000000 0.000000e+00
> print(cbind(pc, duotrio()$linkfun(pc)), digits=7)
              pc             
 [1,]       -Inf 0.000000e+00
 [2,] -1.0000000 0.000000e+00
 [3,]  0.0000000 0.000000e+00
 [4,]  0.1000000 0.000000e+00
 [5,]  0.2000000 0.000000e+00
 [6,]  0.3000000 0.000000e+00
 [7,]  0.4000000 0.000000e+00
 [8,]  0.5000000 0.000000e+00
 [9,]  0.5000000 1.220703e-04
[10,]  0.5000001 1.016527e-03
[11,]  0.6000000 1.115210e+00
[12,]  0.7000000 1.715302e+00
[13,]  0.8000000 2.354862e+00
[14,]  0.9000000 3.263080e+00
[15,]  1.0000000 1.469154e+01
[16,]  1.0000000          Inf
[17,]  1.0000000          Inf
[18,]  2.0000000          Inf
[19,]        Inf          Inf
> 
> ## linkinv - upper limit:
> 1 - duotrio()$linkinv(19)
[1] 4.32987e-15
> 1 - duotrio()$linkinv(20)
[1] 0
> ## eta > 20 -> mu = 1
> 
> ## linkinv - lower limit:
> .5 - duotrio()$linkinv(1e-8)
[1] 0
> .5 - duotrio()$linkinv(1e-7)
[1] -8.881784e-16
> 
> ## mu.eta - upper limit:
> duotrio()$mu.eta(94)
[1] 2.667954e-321
> duotrio()$mu.eta(95)
[1] 0
> 
> ## mu.eta - lower limit
> duotrio()$mu.eta(0)
[1] 0
> duotrio()$mu.eta(1e-15)
[1] 1.665335e-16
> duotrio()$mu.eta(1e-9)
[1] 1.837763e-10
> 
> ## linkfun - upper limit
> duotrio()$linkfun(1 - 1e-8)
[1] 13.74654
> duotrio()$linkfun(1 - 1e-9)
[1] 14.69154
> duotrio()$linkfun(1 - 1.000001e-10)
[1] 15.58204
> duotrio()$linkfun(1 - 1e-10)
[1] Inf
> 
> ## linkfun - lower limit:
> duotrio()$linkfun(.5)
[1] 0
> duotrio()$linkfun(.5 + 1e-10)
[1] 0
> duotrio()$linkfun(.5 + 1.7e-10)
[1] 0
> duotrio()$linkfun(.5 + 1.8e-10)
[1] 6.103516e-05
> duotrio()$linkfun(.5 + 5e-10)
[1] 6.103516e-05
> duotrio()$linkfun(.5 + 1e-9)
[1] 0.0001220703
> duotrio()$linkfun(.5 + 1e-8)
[1] 0.0003051758
> duotrio()$linkfun(.6)
[1] 1.11521
> 
> #################################
> ## Tests of the 2-AFC family object:
> 
> ## Evaluating linkinv, mu.eta and linkfun for a range of values: 
> delta.lim <- c(-Inf, -1, 0, 1e-3, 1e-2, .1, 1:20, 30, Inf)
> print(cbind(delta.lim,
+             DT.linkinv=twoAFC()$linkinv(delta.lim),
+             DT.mu.eta=twoAFC()$mu.eta(delta.lim)), digits=7)
      delta.lim DT.linkinv    DT.mu.eta
 [1,]      -Inf  0.5000000 0.000000e+00
 [2,]    -1.000  0.5000000 0.000000e+00
 [3,]     0.000  0.5000000 2.820948e-01
 [4,]     0.001  0.5002821 2.820947e-01
 [5,]     0.010  0.5028209 2.820877e-01
 [6,]     0.100  0.5281860 2.813904e-01
 [7,]     1.000  0.7602499 2.196956e-01
 [8,]     2.000  0.9213504 1.037769e-01
 [9,]     3.000  0.9830526 2.973257e-02
[10,]     4.000  0.9976611 5.166746e-03
[11,]     5.000  0.9997965 5.445711e-04
[12,]     6.000  0.9999890 3.481326e-05
[13,]     7.000  0.9999996 1.349857e-06
[14,]     8.000  1.0000000 3.174559e-08
[15,]     9.000  1.0000000 4.528265e-10
[16,]    10.000  1.0000000 3.917717e-12
[17,]    11.000  1.0000000 2.055829e-14
[18,]    12.000  1.0000000 6.543253e-17
[19,]    13.000  1.0000000 1.263145e-19
[20,]    14.000  1.0000000 1.478991e-22
[21,]    15.000  1.0000000 1.050341e-25
[22,]    16.000  1.0000000 4.524267e-29
[23,]    17.000  1.0000000 1.182003e-32
[24,]    18.000  1.0000000 1.873018e-36
[25,]    19.000  1.0000000 1.800189e-40
[26,]    20.000  1.0000000 1.049414e-44
[27,]    30.000  1.0000000 5.421714e-99
[28,]       Inf  1.0000000 0.000000e+00
> 
> pc <- c(-Inf, -1, 0:5/10, 0.5 + 1e-9, 0.5 + 1e-7,
+         6:9/10, 1-1e-9, 1-1e-10, 1, 2, Inf)
> print(cbind(pc, twoAFC()$linkfun(pc)), digits=7)
              pc             
 [1,]       -Inf 0.000000e+00
 [2,] -1.0000000 0.000000e+00
 [3,]  0.0000000 0.000000e+00
 [4,]  0.1000000 0.000000e+00
 [5,]  0.2000000 0.000000e+00
 [6,]  0.3000000 0.000000e+00
 [7,]  0.4000000 0.000000e+00
 [8,]  0.5000000 0.000000e+00
 [9,]  0.5000000 3.544908e-09
[10,]  0.5000001 3.544908e-07
[11,]  0.6000000 3.582869e-01
[12,]  0.7000000 7.416143e-01
[13,]  0.8000000 1.190232e+00
[14,]  0.9000000 1.812388e+00
[15,]  1.0000000 8.482180e+00
[16,]  1.0000000 8.996295e+00
[17,]  1.0000000          Inf
[18,]  2.0000000          Inf
[19,]        Inf          Inf
> 
> ## linkinv - upper limit:
> 1 - twoAFC()$linkinv(11)
[1] 3.663736e-15
> 1 - twoAFC()$linkinv(12)
[1] 0
> ## eta > 11 -> mu = 1
> 
> ## linkinv - lower limit:
> .5 - twoAFC()$linkinv(1e-16)
[1] 0
> .5 - twoAFC()$linkinv(1e-15)
[1] -3.330669e-16
> 
> ## mu.eta - upper limit:
> twoAFC()$mu.eta(54)
[1] 7.074862e-318
> twoAFC()$mu.eta(55)
[1] 0
> 
> ## mu.eta - lower limit
> twoAFC()$mu.eta(0)
[1] 0.2820948
> 
> ## linkfun - upper limit
> twoAFC()$linkfun(1 - 1e-16)
[1] 11.61004
> twoAFC()$linkfun(1 - 1e-17)
[1] Inf
> 
> ## linkfun - lower limit:
> twoAFC()$linkfun(.5)
[1] 0
> twoAFC()$linkfun(.5 + 1e-17)
[1] 0
> twoAFC()$linkfun(.5 + 1e-16)
[1] 3.935638e-16
> 
